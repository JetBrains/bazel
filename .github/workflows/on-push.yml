name: Build

on:
  push: # Trigger the workflow on every push event
    branches:
      - '**' # Run on pushes to any branch

# Prevent multiple runs for the same ref from overlapping
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
  setup:
    name: Set Shared Parameters
    runs-on: ubuntu-latest
    outputs:
      jb_bazel_version: ${{ steps.set_params.outputs.jb_bazel_version }}
      jb_bazel_label: ${{ steps.set_params.outputs.jb_bazel_label }}
      bazel_tag: ${{ steps.set_params.outputs.bazel_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - id: set_params
        run: |
          set -e -x -u -o pipefail
          bazel_tag="$(cat bazel-tag.txt)"
          jb_bazel_version="${bazel_tag}-jb_$(date +%Y%m%d)_$GITHUB_RUN_NUMBER"
          echo "jb_bazel_version=$jb_bazel_version" >>"$GITHUB_OUTPUT"
          echo "jb_bazel_label=$jb_bazel_version $(git rev-parse --short HEAD)" >>"$GITHUB_OUTPUT"
          echo "bazel_tag=$bazel_tag" >>"$GITHUB_OUTPUT"

  build:
    name: Build
    runs-on: ${{ matrix.runner }}
    container:
      image: ${{ matrix.docker_image }}
    needs: setup

    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: ubuntu-latest
            docker_image: oraclelinux:8
            exe: ''
            artifact_os: linux
            artifact_arch: x86_64
          - runner: ubuntu-24.04-arm
            docker_image: oraclelinux:8
            exe: ''
            artifact_os: linux
            artifact_arch: arm64
          - runner: macos-13
            exe: ''
            artifact_os: darwin
            artifact_arch: x86_64
          - runner: macos-latest
            exe: ''
            artifact_os: darwin
            artifact_arch: arm64
          - runner: windows-latest
            exe: .exe
            artifact_os: windows
            artifact_arch: x86_64
          - runner: windows-latest
            exe: .exe
            artifact_os: windows
            artifact_arch: arm64
            config: --config=windows_arm64

    steps:
      - name: Print All Environment Variables
        shell: bash
        run: |
          env | sort
          echo ${{ runner.os }} ${{ runner.arch }}
      - name: Set up prerequisites (Linux-only)
        if: runner.os == 'Linux'
        run: |
          dnf -y update
          dnf install -y \
            curl \
            git \
            gcc-c++ \
            java-21-openjdk \
            python3 \
            zip \
            unzip \
            which

          # Set up Bazelisk
          curl -L -o /usr/local/bin/bazelisk https://github.com/bazelbuild/bazelisk/releases/latest/download/bazelisk-linux-$([ "$(uname -m)" = "x86_64" ] && echo amd64 || echo arm64)
          chmod +x /usr/local/bin/bazelisk
      - name: Set up MSYS2 (Windows-only)
        id: msys2
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            zip
            unzip
            patch
      - name: Checkout
        uses: actions/checkout@v4
      - name: Checkout bazel
        shell: bash
        run: git clone --quiet -b ${{ needs.setup.outputs.bazel_tag }} --depth 1 https://github.com/bazelbuild/bazel.git bazel
      - name: Apply patches bazel
        working-directory: bazel
        shell: bash
        run: git apply ../patches/*.patch
      - name: Configure
        if: runner.os == 'Windows'
        shell: bash
        run: |
          echo 'BAZEL_SH=${{ steps.msys2.outputs.msys2-location }}/usr/bin/bash.exe' >>"$GITHUB_ENV"
          echo 'STARTUP_ARG_OUTPUT_USER_ROOT=--output_user_root=C:/_bazel_user_root' >>"$GITHUB_ENV"
          echo 'BUILD_ARG_FEATURES_STATIC_LINK_MSVCRT=--features=static_link_msvcrt' >>"$GITHUB_ENV"
      - name: Build
        working-directory: bazel
        run: bazelisk --batch --nohome_rc --nosystem_rc ${{ env.STARTUP_ARG_OUTPUT_USER_ROOT }} build --verbose_failures --compilation_mode=opt ${{ matrix.config }} --stamp "--embed_label=${{ needs.setup.outputs.jb_bazel_label }}" ${{ env.BUILD_ARG_FEATURES_STATIC_LINK_MSVCRT }} //src:bazel${{ matrix.exe }}
      - name: Publish
        uses: actions/upload-artifact@v4
        with:
          name: bazel-${{ needs.setup.outputs.jb_bazel_version }}-${{ matrix.artifact_os }}-${{ matrix.artifact_arch }}${{ matrix.exe }}
          path: ./bazel/bazel-bin/src/bazel${{ matrix.exe }}
