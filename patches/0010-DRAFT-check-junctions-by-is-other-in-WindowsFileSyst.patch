From 5e5b1b1bcda7b57a7426e282ed7a514ed3e8a27d Mon Sep 17 00:00:00 2001
From: Ilia Kirianovskii <Ilia.Kirianovskii@jetbrains.com>
Date: Thu, 23 Oct 2025 09:41:17 +0200
Subject: [PATCH 1/3] DRAFT check junctions by is other in
 WindowsFileSystem#stat

---
 .../google/devtools/build/lib/windows/WindowsFileSystem.java | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/src/main/java/com/google/devtools/build/lib/windows/WindowsFileSystem.java b/src/main/java/com/google/devtools/build/lib/windows/WindowsFileSystem.java
index f697b1143d..0769e066e4 100644
--- a/src/main/java/com/google/devtools/build/lib/windows/WindowsFileSystem.java
+++ b/src/main/java/com/google/devtools/build/lib/windows/WindowsFileSystem.java
@@ -150,7 +150,8 @@ public class WindowsFileSystem extends JavaIoFileSystem {
       throw new FileNotFoundException(path + ERR_NO_SUCH_FILE_OR_DIR);
     }
 
-    final boolean isSymbolicLink = !followSymlinks && fileIsSymbolicLink(file);
+    // BasicFileAttributes#isOther is true iff FILE_ATTRIBUTE_DEVICE or FILE_ATTRIBUTE_REPARSE_POINT, assume no devices under output user root
+    final boolean isSymbolicLink = !followSymlinks && (attributes.isSymbolicLink() || attributes.isOther());
     final long lastChangeTime =
         WindowsFileOperations.getLastChangeTime(getNioPath(path).toString(), followSymlinks);
     FileStatus status =
@@ -165,7 +166,7 @@ public class WindowsFileSystem extends JavaIoFileSystem {
             // attributes.isOther() returns false for symlinks but returns true for junctions.
             // Bazel treats junctions like symlinks. So let's return false here for junctions.
             // This fixes https://github.com/bazelbuild/bazel/issues/9176
-            return !isSymbolicLink && attributes.isOther();
+            return followSymlinks && attributes.isOther();
           }
 
           @Override
-- 
2.50.1

